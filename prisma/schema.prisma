// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id             String    @id @default(cuid())
  name           String
  command        String
  schedule       String
  lastRun       DateTime?
  nextRun       DateTime?
  lastStatus    String?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String    // Foreign key vers User
  user          User      @relation(fields: [userId], references: [id])
  executions    TaskExecution[]  // Relation avec l'historique des exécutions
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tasks         Task[]    // Ajout de la relation avec Task
}

model TaskExecution {
  id          String    @id @default(cuid())
  taskId      String    // Foreign key vers Task
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  startTime   DateTime  @default(now())
  endTime     DateTime?
  duration    Int?      // Durée en millisecondes
  status      ExecutionStatus
  output      String?   // Sortie de la commande
  error       String?   // Message d'erreur en cas d'échec
  createdAt   DateTime  @default(now())
}

enum ExecutionStatus {
  SUCCESS
  ERROR
  TIMEOUT
}

enum Role {
  ADMIN
  USER
}
